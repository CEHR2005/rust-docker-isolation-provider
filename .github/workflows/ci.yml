name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings

jobs:
  test:
    name: ${{matrix.rust}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      matrix:
        rust: [stable, nightly]
        os: [ubuntu]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - run: cargo install rust-script
      - run: cargo test

  build:
    name: Rust ${{matrix.rust}} ${{matrix.target}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [stable]
        os: [ubuntu]
        include:
          - rust: nightly
            os: ubuntu
            target: x64_86-unknown-linux-musl
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - name: Install ${{matrix.target}} target
        run: rustup target add ${{matrix.target}}
        if: matrix.target
      - run: cargo check

  miri:
    name: Miri
    runs-on: ubuntu-latest
    env:
      MIRIFLAGS: -Zmiri-strict-provenance
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@miri
      - run: cargo miri setup
      - run: cargo miri test

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@clippy
#       later try to add `-Dclippy::pedantic`
      - run: cargo clippy --tests -- -Dclippy::all
      - run: cargo clippy --all-features --tests -- -Dclippy::all
