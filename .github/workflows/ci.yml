name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  RUSTFLAGS: -Dwarnings

jobs:
  test:
    name: ${{matrix.rust}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      matrix:
        rust: [nightly]
        os: [ubuntu]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
      - run: rustup target add wasm32-unknown-unknown
      - run: cargo install wasm-pack
      - run: cargo +${{matrix.rust}} test

  build:
    name: ${{matrix.target || 'native'}}
    runs-on: ${{matrix.os}}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        target: [x86_64-unknown-linux-musl]
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: ${{matrix.target}}
      - run: cargo check

  miri:
    name: Miri
    runs-on: ubuntu-latest
    env:
      MIRIFLAGS: -Zmiri-strict-provenance
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@miri
      - run: cargo miri setup
      - run: cargo miri test

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@clippy
      # later try to add `-Dclippy::pedantic`
      - run: cargo clippy --tests -- -Dclippy::all

  dockerize:
    name: Dockerize
    runs-on: ubuntu-latest
    needs: [build, test, miri]
    if: ${{ github.ref_name == 'node-rt' && github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: deepf/rustwasm-docker-isolation-provider
      - name: build docker image and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
